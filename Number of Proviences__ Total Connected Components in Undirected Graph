class Solution {
public:
    void DFS(int s,vector<bool>&visited,vector<int>adj[])
    {
        visited[s]=true;
        for(int x:adj[s])
        {  if(visited[x]==false)
              DFS(x,visited,adj);
        }
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n=isConnected[0].size();
        vector<int>adj[n];
        for(int i=0;i<n;++i)
        {
            for(int j=0;j<n;++j)
            {  if(isConnected[i][j]==1 && i!=j)
                 adj[i].push_back(j);
            }
        }
        vector<bool>visited(n,false);
        int res=0;
        for(int i=0;i<n;++i)
        {  if(visited[i]==false)
            { ++res;
              DFS(i,visited,adj);
            }
        }
        return res;
    }
};
