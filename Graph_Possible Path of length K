class Solution {
    int n,m,d;
  public:
    int fun(int s,int k,vector<vector<int>>&t,vector<vector<int>>&graph)
       {  
           if(t[s][k]!=-1)
              return t[s][k];
           if(k==0)
            {  if(s==d)
                  return t[s][k]=1;
               else
                  return t[s][k]=0;
            }
           int res=0;
           for(int i=0;i<n;++i)
            {   if(graph[s][i]==1)
                {  res+=(fun(i,k-1,t,graph)); 
                   res=(res%m);
                }
            }
          return t[s][k]=res;
       }
	int MinimumWalk(vector<vector<int>>&graph, int u, int v, int k){
	     n=graph.size();
	     m=1e9+7;
	     d=v;
	     int x;
	    vector<vector<int>>t(n,vector<int>(k+1,-1));
	    for(int i=1;i<=k;++i)
	        x=fun(u,i,t,graph);
	     return t[u][k];
	}

};
