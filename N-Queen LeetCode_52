class Solution {
public:
    void solve_i(int x,int y,vector<vector<int>>&valid,int n)
    {
        static int a[]={1,1,1};
        static int b[]={-1,0,1};
        for(int k=0;k<3;++k)
        {  int i=x,j=y;
           while(i>=0 && i<n && j>=0 && j<n)
           {  valid[i][j]++;
              i=i+a[k];
              j=j+b[k];
           }
        }
    }
    void solve_d(int x,int y,vector<vector<int>>&valid,int n)
    {
        static int a[]={1,1,1};
        static int b[]={-1,0,1};
        for(int k=0;k<3;++k)
        {  int i=x,j=y;
           while(i>=0 && i<n && j>=0 && j<n)
           {  valid[i][j]--;
              i=i+a[k];
              j=j+b[k];
           }
        }
    }
    void fun(int row,vector<vector<int>>&valid,int &res,int n)
    {  if(row==n)
        {  ++res;
           return;
        }
      for(int k=0;k<n;++k)
      {  if(valid[row][k]==0)
          {  solve_i(row,k,valid,n);
             fun(row+1,valid,res,n);
             solve_d(row,k,valid,n);
          }
      }
        
    }
    int totalNQueens(int n) {
        int res=0;
        vector<vector<int>>valid(n,vector<int>(n,0));
        fun(0,valid,res,n);
        return res;
    }
};
