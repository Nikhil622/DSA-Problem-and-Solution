class Solution {
public:
    long long min(long long x,long long y)
    {  if(x<=y)
         return x;
       return y;
    }
    int sumOfFlooredPairs(vector<int>& vt) {
        long long n=1e5,X=1e9+7;
        vector<long long>v(n+1,0);
        for(int x:vt)
          v[x]++;
        for(long long i=1;i<=n;++i)
          v[i]+=v[i-1];
        long long res=0;
        for(long long i=1;i<=n;++i)
        {  if(v[i]-v[i-1]>0)
            {  long long sum=0;
               for(long long j=1;i*j<=n;++j)
                {  long long low=i*j;
                   long long high=min(i*(j+1)-1,n);
                   long long count= v[high]-v[low-1]; //count in the range [low,high]
                   sum=((sum+(count*j)%X)%X);
                }
               res=((res+(sum*(v[i]-v[i-1])))%X);
           }
        }
       return (int)res;     
    }
};
