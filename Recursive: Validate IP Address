bool fun(int idx,int prev,int k,string &s)// Recursive Approach
         {   if(k==0)
             {  if( (s.size()-prev-1)>3 || ((s.size()-prev-1)>1 && s[prev+1]=='0') )
                  return 0;
                string x="";
                for(int i=prev+1;i<s.size();++i)
                  x+=s[i];
                if(stoi(x)>255)
                 return 0;
                return 1;
             }
            if(s[idx]=='.')
            {  if((idx-prev-1)>3 || (idx-prev)==1)
                  return 0;
               if(idx-prev-1>1 && s[prev+1]=='0')
                 return 0;
               string x="";
               for(int i=prev+1;i<idx;++i)
                 x+=s[i];
               if(255<stoi(x))
                 return 0;
               return fun(idx+1,idx,k-1,s);
            } 
            else 
              return fun(idx+1,prev,k,s);
         }
        int isValid(string s) {
            if(15<s.size() || s[0]=='.' || s[s.size()-1]=='.')
              return 0;
            int total=0;
            for(int i=0;i<s.size();++i)
             {  if(s[i]=='.')
                  ++total;
                else if(s[i]<'0' || s[i]>'9')
                  return 0;
             }
            if(total!=3)
              return 0;
            int prev=-1,k=3;
            return fun(0,prev,k,s);
        }
