bool isValid(int x,int y,int n)
 {   
     return (x>=0 && x<n && y>=0 && y<n);
 }

void fun(int i,int j,int sum,int &res,int l,vector<vector<int>> &grid)
 {  if(i==grid.size()-1 && j==grid.size()-1)
    {   if(l==1)
          res=res+sum;
      return;
    }
    static int a[]={-1,0,1,0};
    static int b[]={0,1,0,-1};
    int val=grid[i][j];
    grid[i][j]=0;
    for(int k=0;k<4;++k)
    {  int x=i+a[k],y=j+b[k];
       if(isValid(x,y,grid.size())==true && grid[x][y]!=0)
          fun(x,y,sum+abs(grid[x][y]-val),res,l-1,grid);
    }
    grid[i][j]=val;
 }
int Solution::solve(vector<vector<int>> &A) {
    int res=0;
    int zeros=0;
    int n=A.size();
    for(int i=0;i<n;++i)
    {
        for(int j=0;j<n;++j)
        {  if(A[i][j]==0)
               ++zeros;
        }
    }
    fun(0,0,0,res,n*n-zeros,A);
    return res;
}
