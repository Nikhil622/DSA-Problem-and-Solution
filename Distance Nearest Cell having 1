class Solution 
{
    public:

	vector<vector<int>>nearest(vector<vector<int>>&grid)
	{  
	    static int a[]={-1,1,0,0};
        static int b[]={0,0,-1,1};
        queue<pair<int,int>> q;  // q: Neighbors
        int m=grid.size(),n=grid[0].size();
	    vector<vector<int>>res(m,vector<int>(n,10000)); // 10000 is some big number
	   for(int i=0;i<m;++i)
	   {  for(int j=0;j<n;++j)
             {  if(grid[i][j]==1)
                 {   q.push({i,j});
                     res[i][j]=0;
                 }
             }
	   }
       while(q.empty()==false)
       {  auto p=q.front();
          q.pop();
          for(int k=0;k<4;++k)
          {  int x=p.first+a[k],y=p.second+b[k];
             if(x>=0 && x<m && y>=0 && y<n && res[x][y]>res[p.first][p.second]+1)
              {  res[x][y]=res[p.first][p.second]+1;
                 q.push({x,y});
              }
          }
       }
       return res;
	}
	
};
