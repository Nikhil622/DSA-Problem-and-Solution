class Solution {
public:
    int fun(int l,int r,vector<int>&v,vector<vector<int>>&t)
    {   if(v.size()==1)
          return v[0];
        if(r<l)
          return 0;
        if(l==r)
        {   if(l==0)
             return v[l]*v[l+1];
            else if(l==v.size()-1)
              return v[l-1]*v[l];
            else
              return v[l-1]*v[l]*v[r+1];
        }
        if(t[l][r]!=-1)
            return t[l][r];
        int res=0;
        for(int i=l;i<=r;++i)
        {   if(l-1<0 && v.size()<=r+1)
               res=max(res,v[i]+fun(l,i-1,v,t)+fun(i+1,r,v,t));
            else if(l-1<0)
             res=max(res,v[i]*v[r+1]+fun(l,i-1,v,t)+fun(i+1,r,v,t));
            else if(v.size()<=r+1)
             res=max(res,v[l-1]*v[i]+fun(l,i-1,v,t)+fun(i+1,r,v,t));
            else
             res=max(res,v[l-1]*v[i]*v[r+1]+fun(l,i-1,v,t)+fun(i+1,r,v,t));
        }
       return t[l][r]=res; 
    }
    int maxCoins(vector<int>& nums){
       int n=nums.size();
       vector<vector<int>>t(n,vector<int>(n,-1));
       return fun(0,n-1,nums,t);
    }
};
