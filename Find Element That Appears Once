class Solution{
public:	
// 	int search(int A[], int N){   // Time Complexity: O(n)
// 	    int res=0;
// 	    for(int i=0;i<N;++i)
// 	     res=(res^A[i]);  // XOR :  i) n^n=0   ii) n^0=n  
// 	     // XOR operation is Commutative:The commutative property 
// 	     //order in which we use XOR on N numbers does not change the result.
// 	    return res;
// 	}
   int fun(int l,int r,int a[])  // O(log n)
    {   if(l==r)
          return a[l];
        int mid=(l+r)/2;
        if(mid%2==0) // including (0 to mid): total odd number of elements
        {  if(a[mid]==a[mid+1])
             return fun(mid+2,r,a);
           else
             return fun(l,mid,a);
        }
       else{ // (mid%2==1)
           if(a[mid]==a[mid-1])// including (0 to mid): total even number of elements
             return fun(mid+1,r,a);
           else
             return fun(l,mid,a);
       }
    }
   int search(int A[], int N)
    {
        return fun(0,N-1,A);
    }
};
