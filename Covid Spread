 class Solution {
public:
    int helpaterp(vector<vector<int>>&hospital)
    {   static int a[]={-1,1,0,0};
        static int b[]={0,0,-1,1};
        int m=hospital.size(),n=hospital[0].size();
        vector<vector<int>>res(m,vector<int>(n,INT_MAX));
        queue<pair<int,int>>q;
        for(int i=0;i<m;++i)
        {
            for(int j=0;j<n;++j)
            {  if(hospital[i][j]==2)
                 {   res[i][j]=0;
                     q.push({i,j});
                 }
               else if(hospital[i][j]==0)
                 res[i][j]=-1;
            }
        }
        while(q.empty()==false)
        {  auto p=q.front();
           q.pop();
           for(int k=0;k<4;++k)
           {   int x=p.first+a[k],y=p.second+b[k];
               if(x>=0 && x<m && y>=0 && y<n && (hospital[x][y]==1)&&(res[p.first][p.second]+1<res[x][y]))
               {  res[x][y]=res[p.first][p.second]+1;
                  q.push({x,y});
               }
           }
        }
        int ans=INT_MIN;
        for(int i=0;i<m;++i)
        {
            for(int j=0;j<n;++j)
            {   if(res[i][j]==-1)
                   continue;
                else if(res[i][j]==INT_MAX)
                    return -1;
                ans=max(ans,res[i][j]); 
            }
        }
        return ans;
    }
};
